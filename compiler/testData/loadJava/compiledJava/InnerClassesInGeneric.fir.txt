public open class InnerClassesInGeneric<P : R|kotlin/Any!|, Q : R|kotlin/Any!|> : R|kotlin/Any| {
    public constructor<P : R|kotlin/Any!|, Q : R|kotlin/Any!|>(): R|test/InnerClassesInGeneric<P, Q>|

    public open inner class Inner<P : R|kotlin/Any!|, Q : R|kotlin/Any!|> : R|kotlin/Any| {
        public test/InnerClassesInGeneric<P, Q>.constructor(): R|test/InnerClassesInGeneric.Inner<P, Q>|

    }
    public open inner class Inner2<P : R|kotlin/Any!|, Q : R|kotlin/Any!|> : R|test/InnerClassesInGeneric.Inner<ft<P & Any, P?>, ft<Q & Any, Q?>>| {
        public open operator fun iterator(): R|ft<kotlin/collections/MutableIterator<ft<P & Any, P?>>, kotlin/collections/Iterator<ft<P & Any, P?>>?>|

        public test/InnerClassesInGeneric<P, Q>.constructor(): R|test/InnerClassesInGeneric.Inner2<P, Q>|

    }
}
