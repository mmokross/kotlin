//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto_idea_kpm.proto

package org.jetbrains.kotlin.kpm.idea.proto;

@kotlin.jvm.JvmSynthetic
internal inline fun ideaKpmModuleProto(block: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProtoKt.Dsl.() -> kotlin.Unit): org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto =
  org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProtoKt.Dsl._create(org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto.newBuilder()).apply { block() }._build()
internal object IdeaKpmModuleProtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  internal class Dsl private constructor(
    private val _builder: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto.Builder
  ) {
    internal companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto = _builder.build()

    /**
     * <code>optional .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmExtrasProto extras = 1;</code>
     */
    internal var extras: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmExtrasProto
      @JvmName("getExtras")
      get() = _builder.getExtras()
      @JvmName("setExtras")
      set(value) {
        _builder.setExtras(value)
      }
    /**
     * <code>optional .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmExtrasProto extras = 1;</code>
     */
    internal fun clearExtras() {
      _builder.clearExtras()
    }
    /**
     * <code>optional .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmExtrasProto extras = 1;</code>
     * @return Whether the extras field is set.
     */
    internal fun hasExtras(): kotlin.Boolean {
      return _builder.hasExtras()
    }

    /**
     * <code>optional .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleCoordinatesProto coordinates = 2;</code>
     */
    internal var coordinates: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleCoordinatesProto
      @JvmName("getCoordinates")
      get() = _builder.getCoordinates()
      @JvmName("setCoordinates")
      set(value) {
        _builder.setCoordinates(value)
      }
    /**
     * <code>optional .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleCoordinatesProto coordinates = 2;</code>
     */
    internal fun clearCoordinates() {
      _builder.clearCoordinates()
    }
    /**
     * <code>optional .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleCoordinatesProto coordinates = 2;</code>
     * @return Whether the coordinates field is set.
     */
    internal fun hasCoordinates(): kotlin.Boolean {
      return _builder.hasCoordinates()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    internal class FragmentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     */
     internal val fragments: com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFragmentsList()
      )
    /**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     * @param value The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFragments")
    internal fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>.add(value: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto) {
      _builder.addFragments(value)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     * @param value The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFragments")
    @Suppress("NOTHING_TO_INLINE")
    internal inline operator fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>.plusAssign(value: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto) {
      add(value)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     * @param values The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFragments")
    internal fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>.addAll(values: kotlin.collections.Iterable<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto>) {
      _builder.addAllFragments(values)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     * @param values The fragments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFragments")
    @Suppress("NOTHING_TO_INLINE")
    internal inline operator fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>.plusAssign(values: kotlin.collections.Iterable<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto>) {
      addAll(values)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     * @param index The index to set the value at.
     * @param value The fragments to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFragments")
    internal operator fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>.set(index: kotlin.Int, value: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto) {
      _builder.setFragments(index, value)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto fragments = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFragments")
    internal fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmFragmentProto, FragmentsProxy>.clear() {
      _builder.clearFragments()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    internal class VariantsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     */
     internal val variants: com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getVariantsList()
      )
    /**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     * @param value The variants to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVariants")
    internal fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>.add(value: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto) {
      _builder.addVariants(value)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     * @param value The variants to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVariants")
    @Suppress("NOTHING_TO_INLINE")
    internal inline operator fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>.plusAssign(value: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto) {
      add(value)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     * @param values The variants to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVariants")
    internal fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>.addAll(values: kotlin.collections.Iterable<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto>) {
      _builder.addAllVariants(values)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     * @param values The variants to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVariants")
    @Suppress("NOTHING_TO_INLINE")
    internal inline operator fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>.plusAssign(values: kotlin.collections.Iterable<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto>) {
      addAll(values)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     * @param index The index to set the value at.
     * @param value The variants to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVariants")
    internal operator fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>.set(index: kotlin.Int, value: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto) {
      _builder.setVariants(index, value)
    }/**
     * <code>repeated .org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto variants = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVariants")
    internal fun com.google.protobuf.kotlin.DslList<org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmVariantProto, VariantsProxy>.clear() {
      _builder.clearVariants()
    }}
}
@kotlin.jvm.JvmSynthetic
internal inline fun org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto.copy(block: org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProtoKt.Dsl.() -> kotlin.Unit): org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProto =
  org.jetbrains.kotlin.kpm.idea.proto.IdeaKpmModuleProtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()
